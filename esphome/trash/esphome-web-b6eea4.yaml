substitutions:
  esp_home_name: reticulation
  device_name: retic
  friendly_name: Reticulation
  upper_device_name: "Retic Controller"
  retic_controller: retic_control

  # Controller switches 
  sprinkler_control: Controller
  zone_0_name: Pump
  zone_1_name: valve_1
  zone_2_name: valve_2
  zone_3_name: Valve_3
  zone_4_name: valve_4
  zone_5_name: valve_5
  zone_6_name: valve_6
  zone_7_name: valve_7

  sensor_update_frequency: 1s
  #uom: Min

globals:
  - id: retic_multiplier_int
    type: int
    restore_value: no
    initial_value: '1'

  - id: retic_zone_number
    type: int
    restore_value: no
    initial_value: '1'

####################################################
esphome:
  name: ${esp_home_name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  project:
    name: mg.retic
    version: '1.0'

  on_boot: 
    priority: -100
    then: 
# Set default state for Valve Status
      - text_sensor.template.publish:
          id: valve_status
          state: "Idle"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:

# Allow provisioning Wi-Fi via serial
improv_serial:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 10.10.0.236
    gateway: 10.10.0.1
    subnet: 255.255.255.0

  # Set up a wifi access point
  ap: {}

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# To have a "next url" for improv serial
web_server:

############################################
## SPI config for display using HSPI
spi:
  - mosi_pin: GPIO13  #Pin 15
    clk_pin: GPIO14   #Pin 12

font:
  - file: "gfonts://Roboto"
    id: roboto_12
    size: 12

display:
  - platform: ssd1306_spi
    reset_pin: GPIO21   # Pin 33
    model: SSD1305_128X64
    id: retic_display
    dc_pin: GPIO12     # Pin 13
    cs_pin: GPIO15     # Pin 29

    lambda: |-
      it.print(0, 10, id(roboto_12), "Hello World!");
      it.line(0, 0, 50, 50);

###############################################
# Text sensors with general information.
###############################################

text_sensor:
# Expose Time Remaining for running zone as a sensor.
  - platform: template
    id: time_remaining
    name: $device_name Time Remaining
    update_interval: $sensor_update_frequency
    icon: "mdi:timer-sand"
    lambda: |-
      int seconds = round(id($device_name).time_remaining_active_valve().value_or(0));
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600);
      int hours = seconds / 3600;
      seconds = seconds % 3600;
      int minutes = seconds /  60;
      seconds = seconds % 60;
        return {
          ((days ? String(days) + "d " : "") + 
          (hours ? String(hours) + "h " : "") +
          (minutes ? String(minutes) + "m " : "") +
          (String(seconds) + "s")).c_str()};

# Expose Valve Status as a sensor.
  - platform: template
    id: valve_status
    name: $device_name Status
    update_interval: never
    icon: "mdi:information-variant"

# Section to manage the sprinkler controller actions
sprinkler:
  - id: $device_name
    main_switch: $sprinkler_control
    auto_advance_switch: $sprinkler_control Auto Advance
    reverse_switch: $sprinkler_control Reverse
    pump_start_pump_delay: 2s
    pump_stop_valve_delay: 1s
    valve_overlap: 2s

    # Set multiplier to apply to all enabled run times
    multiplier_number:
      id: time_multiplier
      name: "Time Multiplier"
      initial_value: 1
      min_value: 0.2
      max_value: 5
      step: 0.2
      icon: "mdi:timer-outline"
      mode: BOX
      on_value:   # Value given
        then:
          - sprinkler.set_multiplier:   # Action set multiplier routine
              id: $device_name 
              multiplier:
                !lambda "return x;"     # Get/pass value of time_multiplier 

# Number of times to repeat sprinkler cycle
    repeat_number: 
      id: repeat_number
      name: Repeat_Cycle
      initial_value: 0
      min_value: 0
      max_value: 5
      step: 1
      restore_value: True
      disabled_by_default: False
      icon: "mdi:timer-outline"
      mode: BOX
      on_value: 
        then:
          - sprinkler.set_repeat: !lambda "return x;"   

# Activate switch + pump, designate solenoid to operate
# Pump GPIO 4 pin 26;             
    valves:  
      - valve_switch: $zone_1_name
        enable_switch: Enable $zone_1_name
        pump_switch_id: pin_26
        run_duration_number: 
          name: time_zone_1
          unit_of_measurement: s
          mode: BOX
          icon: mdi:timer-outline
          initial_value: 15
          min_value: 1
          max_value: 20
          step: 1
          restore_value: true
          disabled_by_default: false
        valve_switch_id: pin_27  # GPIO 16

      - valve_switch: $zone_2_name
        enable_switch: Enable $zone_2_name
        pump_switch_id: pin_26
        run_duration_number:
          name: time_Zone_2
          unit_of_measurement: s
          mode: BOX
          icon: mdi:timer-outline
          initial_value: 15
          min_value: 1
          max_value: 20
          step: 1
          restore_value: true
          disabled_by_default: false
        valve_switch_id: pin_28 # GPIO 17

      - valve_switch: $zone_3_name
        enable_switch: Enable $zone_3_name
        pump_switch_id: pin_26
        run_duration_number:
          name: time_zone_3
          unit_of_measurement: s
          mode: BOX
          icon: mdi:timer-outline
          initial_value: 15
          min_value: 1
          max_value: 20
          step: 1
          restore_value: true
          disabled_by_default: false
        valve_switch_id: pin_7 # GPIO 32

      - valve_switch: $zone_4_name
        enable_switch: Enable $zone_4_name
        pump_switch_id: pin_26
        run_duration_number:
          name: time_zone_4
          unit_of_measurement: s
          mode: BOX
          icon: mdi:timer-outline
          initial_value: 15
          min_value: 1
          max_value: 20
          step: 1
          restore_value: true
          disabled_by_default: false
        valve_switch_id: pin_8  # GPIO 33

      - valve_switch: $zone_5_name
        enable_switch: Enable $zone_5_name
        pump_switch_id: pin_26
        run_duration_number:
          name: time_zone_5
          unit_of_measurement: s
          mode: BOX
          icon: mdi:timer-outline
          initial_value: 15
          min_value: 1
          max_value: 20
          step: 1
          restore_value: true
          disabled_by_default: false
        valve_switch_id: pin_9  # GPIO 25

      - valve_switch: $zone_6_name
        enable_switch: Enable $zone_6_name
        pump_switch_id: pin_26
        run_duration_number:
          name: time_zone_6
          unit_of_measurement: s
          mode: BOX
          icon: mdi:timer-outline
          initial_value: 15
          min_value: 1
          max_value: 20
          step: 1
          restore_value: true
          disabled_by_default: false
        valve_switch_id: pin_10  #  GPIO 26

      - valve_switch: $zone_7_name
        enable_switch: Enable $zone_7_name
        pump_switch_id: pin_26
        run_duration_number:
          name: time_zone_7
          unit_of_measurement: s
          mode: BOX
          icon: mdi:timer-outline
          initial_value: 15
          min_value: 1
          max_value: 20
          step: 1
          restore_value: true
          disabled_by_default: false
        valve_switch_id: pin_11   # GPIO 27

# Allocate valves/solenoids to GPIO
# Using IO expander MCP23017 with 8 GPIO pins A0 - A7
switch:
  - platform: gpio
    name: $zone_0_name
    id: pin_26
    pin:
      number:  GPIO4
      inverted: False
      mode:
        output: true
     
  - platform: gpio
    name: $zone_1_name
    id: pin_27
    pin:
      number: GPIO16
      inverted: False
      mode:
        output: true

  - platform: gpio
    name: $zone_2_name
    id: pin_28
    pin:
      number: GPIO17
      inverted: False
      mode:
        output: true

  - platform: gpio  
    name: $zone_3_name
    id: pin_7
    pin:
      number: GPIO32
      inverted: False
      mode:
        output: true
      
  - platform: gpio  
    name: $zone_04_name
    id: pin_8
    pin:
      number: GPIO33
      inverted: False
      mode:
        output: true
  
  - platform: gpio  
    name: $zone_05_name
    id: pin_9
    pin:
      number: GPIO25
      inverted: False
      mode:
        output: true

  - platform: gpio  
    name: $zone_06_name
    id: pin_10
    pin:
      number: GPIO26
      inverted: False
      mode:
       output: true

  - platform: gpio  
    name: $zone_07_name
    id: pin_11
    pin:
      number: GPIO27
      inverted: False
      mode:
        output: true

# Buttons for sundry actions
button:
# Button to pause cycle  
  - platform: template
    id: sprinkler_pause
    name: "Pause"
    icon: "mdi:pause"
    on_press:
      then:
        - text_sensor.template.publish:
            id: valve_status
            state: "Paused"
        - sprinkler.pause: $device_name 

# Button to restart cycle
  - platform: template
    id: sprinkler_resume
    name: "Resume"
    icon: "mdi:run"
    on_press:
      then:
        - text_sensor.template.publish:
            id: valve_status
            state: "Resumed"
        - sprinkler.resume: $device_name        

# Button to shutdown system
  - platform: template
    id: sprinkler_shutdown
    name: "Shutdown"
    icon: "mdi:stop"
    on_press:
      then:
        - text_sensor.template.publish:
            id: valve_status
            state: "Idle"
        - sprinkler.shutdown: $device_name   